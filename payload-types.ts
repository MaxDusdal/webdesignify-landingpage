/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    media: Media;
    blog: Blog;
    author: Author;
    'case-studies': CaseStudy;
    users: User;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    media: MediaSelect<false> | MediaSelect<true>;
    blog: BlogSelect<false> | BlogSelect<true>;
    author: AuthorSelect<false> | AuthorSelect<true>;
    'case-studies': CaseStudiesSelect<false> | CaseStudiesSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {
    impressum: Impressum;
    datenschutz: Datenschutz;
    faq: Faq;
  };
  globalsSelect: {
    impressum: ImpressumSelect<false> | ImpressumSelect<true>;
    datenschutz: DatenschutzSelect<false> | DatenschutzSelect<true>;
    faq: FaqSelect<false> | FaqSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "blog".
 */
export interface Blog {
  id: number;
  title: string;
  excerpt: string;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  image: number | Media;
  date: string;
  category: 'Web Design' | 'Web Development' | 'SEO' | 'Marketing' | 'Other';
  tags: {
    tag?: string | null;
    id?: string | null;
  }[];
  relatedPosts?:
    | {
        post?: (number | null) | Blog;
        id?: string | null;
      }[]
    | null;
  slug: string;
  status: 'draft' | 'published';
  author: number | Author;
  readTime?: number | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "author".
 */
export interface Author {
  id: number;
  name: string;
  user: number | User;
  image: number | Media;
  bio: string;
  socialLinks?:
    | {
        name?: string | null;
        url?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "case-studies".
 */
export interface CaseStudy {
  id: number;
  /**
   * Der Slug wird verwendet, um die URL des Projekts zu generieren. (z.B. "restaurant-bergblick" in der URL https://webdesignify.de/projekte/restaurant-bergblick)
   */
  slug: string;
  title: string;
  description: string;
  heroImage: number | Media;
  heroCTA: {
    buttonText?: string | null;
    buttonLink: string;
  };
  statistics: {
    icon: 'search' | 'star' | 'calendar' | 'clock';
    /**
     * Wert der Statistik (z.B. "100" oder "100%")
     */
    value: string;
    /**
     * Label der Statistik (z.B. "Verbesserung der Suchleistung")
     */
    label: string;
    id?: string | null;
  }[];
  projectSummary?: {
    content?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    timelineItems?:
      | {
          text: string;
          id?: string | null;
        }[]
      | null;
    serviceItems?:
      | {
          text: string;
          id?: string | null;
        }[]
      | null;
  };
  challenge?: {
    description?: string | null;
    challenges?:
      | {
          text: string;
          id?: string | null;
        }[]
      | null;
    summary?: string | null;
    imageGroup?: {
      image?: (number | null) | Media;
      imageDescription?: string | null;
    };
  };
  solution?: {
    description?: string | null;
    points?:
      | {
          text: string;
          id?: string | null;
        }[]
      | null;
    /**
     * Füge 1 bis 3 Tabs hinzu, um verschiedene Aspekte der Lösung zu zeigen
     */
    tabs?:
      | {
          title: string;
          /**
           * Eindeutige Kennung für diesen Tab (z.B. "website", "system", "results")
           */
          value: string;
          image: number | Media;
          description?: string | null;
          id?: string | null;
        }[]
      | null;
  };
  inHouseSoftware?: {
    title?: string | null;
    description?: string | null;
    points?:
      | {
          text: string;
          id?: string | null;
        }[]
      | null;
    cta?: {
      text?: string | null;
      link?: string | null;
    };
  };
  results?: {
    description?: string | null;
    /**
     * Add Kategorien zu Ergebnissen anzeigen
     */
    metrics?:
      | {
          category: string;
          icon: 'trendingUp' | 'lineChart' | 'users';
          /**
           * Add vorher/nachher Statistiken für diese Kategorie
           */
          statistics?:
            | {
                label: string;
                before: string;
                after: string;
                improvement: string;
                id?: string | null;
              }[]
            | null;
          id?: string | null;
        }[]
      | null;
  };
  testimonial: {
    quote: string;
    author: {
      name: string;
      title: string;
      image?: (number | null) | Media;
    };
  };
  conclusion: {
    content: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'blog';
        value: number | Blog;
      } | null)
    | ({
        relationTo: 'author';
        value: number | Author;
      } | null)
    | ({
        relationTo: 'case-studies';
        value: number | CaseStudy;
      } | null)
    | ({
        relationTo: 'users';
        value: number | User;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "blog_select".
 */
export interface BlogSelect<T extends boolean = true> {
  title?: T;
  excerpt?: T;
  content?: T;
  image?: T;
  date?: T;
  category?: T;
  tags?:
    | T
    | {
        tag?: T;
        id?: T;
      };
  relatedPosts?:
    | T
    | {
        post?: T;
        id?: T;
      };
  slug?: T;
  status?: T;
  author?: T;
  readTime?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "author_select".
 */
export interface AuthorSelect<T extends boolean = true> {
  name?: T;
  user?: T;
  image?: T;
  bio?: T;
  socialLinks?:
    | T
    | {
        name?: T;
        url?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "case-studies_select".
 */
export interface CaseStudiesSelect<T extends boolean = true> {
  slug?: T;
  title?: T;
  description?: T;
  heroImage?: T;
  heroCTA?:
    | T
    | {
        buttonText?: T;
        buttonLink?: T;
      };
  statistics?:
    | T
    | {
        icon?: T;
        value?: T;
        label?: T;
        id?: T;
      };
  projectSummary?:
    | T
    | {
        content?: T;
        timelineItems?:
          | T
          | {
              text?: T;
              id?: T;
            };
        serviceItems?:
          | T
          | {
              text?: T;
              id?: T;
            };
      };
  challenge?:
    | T
    | {
        description?: T;
        challenges?:
          | T
          | {
              text?: T;
              id?: T;
            };
        summary?: T;
        imageGroup?:
          | T
          | {
              image?: T;
              imageDescription?: T;
            };
      };
  solution?:
    | T
    | {
        description?: T;
        points?:
          | T
          | {
              text?: T;
              id?: T;
            };
        tabs?:
          | T
          | {
              title?: T;
              value?: T;
              image?: T;
              description?: T;
              id?: T;
            };
      };
  inHouseSoftware?:
    | T
    | {
        title?: T;
        description?: T;
        points?:
          | T
          | {
              text?: T;
              id?: T;
            };
        cta?:
          | T
          | {
              text?: T;
              link?: T;
            };
      };
  results?:
    | T
    | {
        description?: T;
        metrics?:
          | T
          | {
              category?: T;
              icon?: T;
              statistics?:
                | T
                | {
                    label?: T;
                    before?: T;
                    after?: T;
                    improvement?: T;
                    id?: T;
                  };
              id?: T;
            };
      };
  testimonial?:
    | T
    | {
        quote?: T;
        author?:
          | T
          | {
              name?: T;
              title?: T;
              image?: T;
            };
      };
  conclusion?:
    | T
    | {
        content?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "impressum".
 */
export interface Impressum {
  id: number;
  /**
   * Der Titel der Impressum Seite
   */
  title: string;
  /**
   * Wann wurde diese Impressum Seite zuletzt aktualisiert?
   */
  lastUpdated: string;
  /**
   * Der Hauptinhalt der Impressum Seite
   */
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  _status?: ('draft' | 'published') | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "datenschutz".
 */
export interface Datenschutz {
  id: number;
  /**
   * The title of the Privacy Policy page
   */
  title: string;
  /**
   * When was this Privacy Policy last updated?
   */
  lastUpdated: string;
  /**
   * The main content of the Privacy Policy
   */
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  _status?: ('draft' | 'published') | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "faq".
 */
export interface Faq {
  id: number;
  /**
   * Die einzelnen FAQ-Einträge
   */
  faqItems?:
    | {
        /**
         * Die Frage des FAQ-Eintrags
         */
        question: string;
        /**
         * Die Antwort auf die Frage
         */
        answer: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        };
        id?: string | null;
      }[]
    | null;
  _status?: ('draft' | 'published') | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "impressum_select".
 */
export interface ImpressumSelect<T extends boolean = true> {
  title?: T;
  lastUpdated?: T;
  content?: T;
  _status?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "datenschutz_select".
 */
export interface DatenschutzSelect<T extends boolean = true> {
  title?: T;
  lastUpdated?: T;
  content?: T;
  _status?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "faq_select".
 */
export interface FaqSelect<T extends boolean = true> {
  faqItems?:
    | T
    | {
        question?: T;
        answer?: T;
        id?: T;
      };
  _status?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}